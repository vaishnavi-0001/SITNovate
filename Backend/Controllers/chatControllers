// const Chat = require("../Models/chatSchema");
// const { OpenAI } = require("openai");
// const dotenv = require("dotenv");

// dotenv.config();

// // Initialize OpenAI instance
// const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// // ðŸ“Œ Send Message & Get AI Response
// const sendMessage = async (req, res) => {
//   try {
//     const { projectId, message } = req.body;
//     const senderId = req.user.id; // Authenticated user

//     if (!message || !message.trim()) {
//       return res.status(400).json({ success: false, error: "Message cannot be empty" });
//     }

//     // Save user message to DB
//     const newMessage = new Chat({ projectId, senderId, message });
//     await newMessage.save();

//     // âœ… Call OpenAI API for response
//     const aiResponse = await openai.chat.completions.create({
//       model: "gpt-4-turbo", // Choose a suitable model (gpt-3.5-turbo or gpt-4-turbo)
//       messages: [{ role: "user", content: message }],
//     });

//     const aiMessage = aiResponse.choices[0]?.message?.content || "AI response not available";

//     // Save AI response to DB
//     const aiReply = new Chat({ projectId, senderId: "AI", message: aiMessage });
//     await aiReply.save();

//     res.status(200).json({ success: true, reply: aiMessage });
//   } catch (error) {
//     console.error("Error in sendMessage:", error);
//     res.status(500).json({ success: false, error: "Failed to fetch AI response" });
//   }
// };

// // ðŸ“Œ Get Chat History
// const getChatHistory = async (req, res) => {
//   try {
//     const { projectId } = req.params;
//     const userId = req.user.id; // Authenticated user

//     // âœ… Fetch chat messages only for the given project & user
//     const chatHistory = await Chat.find({ projectId, senderId: { $in: [userId, "AI"] } })
//       .sort({ createdAt: 1 });

//     res.status(200).json({ success: true, chatHistory });
//   } catch (error) {
//     console.error("Error in getChatHistory:", error);
//     res.status(500).json({ success: false, error: "Error fetching chat history" });
//   }
// };

// module.exports = { sendMessage, getChatHistory };
